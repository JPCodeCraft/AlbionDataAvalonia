name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'        

    - name: Get the version
      id: get_version
      run: |
        $version = (Select-String -Path ./AlbionDataAvalonia.Desktop/pkg/inno.iss -Pattern '#define MyAppVersion "(.*)"').Matches.Groups[1].Value
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "Found version: ${{ env.VERSION }}"
      shell: pwsh

    - name: Build project
      run: dotnet build ./AlbionDataAvalonia.Desktop/AlbionDataAvalonia.Desktop.csproj --configuration Release

    - name: Compile .ISS to .EXE Installer
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: ./AlbionDataAvalonia.Desktop/pkg/inno.iss
        options: /O+

    - name: Get diff
      id: get_diff
      run: |
        git fetch --tags
        LATEST_TAG=$(git describe --tags --abbrev=0 --always)
        DIFF=$(git diff --shortstat $LATEST_TAG)
        echo "DIFF=$DIFF" >> $GITHUB_ENV
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AVALONIA_TOKEN }}
      with:
        tag_name: v.${{ env.VERSION }}
        release_name: Albion Free Market Data Client v.${{ env.VERSION }}
        body: |
          Changes since last release:
          ${{ env.DIFF }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AVALONIA_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:\Users\runneradmin\Documents\Inno Setup Output\AFMDataClientSetup_v_${{ env.VERSION }}.exe
        asset_name: AFMDataClientSetup_v_${{ env.VERSION }}.exe
        asset_content_type: application/octet-stream

    - name: Create LatestVersion.json
      run: |
        $version = "${{ env.VERSION }}"
        $json = "{`"version`": `"$version`"}"
        $json | Out-File -FilePath ./AlbionDataAvalonia.Desktop/LatestVersion.json -Encoding utf8
      shell: pwsh

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
      shell: bash

    - name: Commit LatestVersion.json
      run: |
        git add ./AlbionDataAvalonia.Desktop/LatestVersion.json
        git commit -m "Update LatestVersion.json"
      shell: bash

    - name: Push changes
      run: git push
      shell: bash
